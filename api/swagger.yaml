swagger: '2.0'
info:
  description: >-
    This is a sample server Petstore server.  You can find out more about    
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).      For this sample, you can use the api
    key `special-key` to test the authorization     filters.
  version: 1.0.0
  title: API Connector Management
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:5001'
basePath: /
tags:
  - name: connector
    description: API Connector User's Management
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
schemes:
  - https
paths:
  /connectors:
    get:
      tags:
        - connector
      summary: Get all connector
      description: ''
      operationId: getAllConnector
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Connector'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: Connector
    post:
      tags:
        - connector
      summary: Create connector
      description: This can only be done by the logged in user.
      operationId: createConnector
      produces:
        - application/json
      parameters:
        - name: user
          in: header
          description: Username of user whcich was registered from data exchange
          required: true
          type: string
        - name: Authorization
          in: header
          description: Api-key for access data exchange
          required: true
          type: string
        - name: collectionId
          in: header
          description: Collection id for store data
          required: true
          type: string
        - in: body
          name: body
          description: Connector information
          required: true
          schema:
            $ref: '#/definitions/Connector_req'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Connector
  '/connectors/{collectionId}':
    get:
      tags:
        - connector
      summary: Get connector by collection id
      description: ''
      operationId: getConnectorByCollectionId
      produces:
        - application/json
      parameters:
        - name: collectionId
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Connector'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: Connector
    put:
      tags:
        - connector
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUse - application/json
      parameters:
        - name: collectionId
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Connector'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      x-swagger-router-controller: Connector
    delete:
      tags:
        - connector
      summary: Delete connector
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: collectionId
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
  '/connectors/user/{username}':
    get:
      tags:
        - connector
      summary: Get connector by username
      description: ''
      operationId: getConnectorByUsername
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
        - name: Authorization
          in: header
          description: The access token to access collection information of user
          type: string
          required: true
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Connector'
        '400':
          description: Invalid username supplied
        '401':
          description: Unauthorization
        '404':
          description: User not found
      x-swagger-router-controller: Connector
definitions:
  Connector:
    type: object
    properties:
      owner:
        type: string
        description: owner of connector
      collectionId:
        type: string
        description: collection which data will be stored
      type:
        type: string
        description: 'type of connector eg. api, website, server, webservice'
        default: api
      method:
        type: string
        description: http method
        default: GET
      time:
        type: string
        description: >-
          period time to collect data in ms unit eg. 3000 means collect data
          every 5 minutes
        default: 3000
      createdAt:
        type: string
        description: time created connector
      status:
        type: string
        description: >-
          show status of connector whether it is still running and get collectly
          data
  Connector_accessible:
    type: object
    properties:
      owner:
        type: string
        description: owner of connector
      collectionId:
        type: string
        description: collection which data will be stored
      ticket:
        type: string
        description: ticket of collection to post data
      type:
        type: string
        description: 'type of connector eg. api, website, server, webservice'
        default: api
      method:
        type: string
        description: http method
        default: GET
      endpoint:
        type: string
        description: endpoint of user's API
      header:
        type: object
        properties: {}
      body:
        type: object
        properties: {}
      time:
        type: string
        description: >-
          period time to collect data in ms unit eg. 3000 means collect data
          every 5 minutes
        default: 3000
      createdAt:
        type: string
        description: time created connector
      status:
        type: string
        description: >-
          show status of connector whether it is still running and get collectly
          data
  Connector_req:
    type: object
    properties:
      type:
        type: string
        description: 'type of connector eg. api, website, server, webservice'
        default: api
      method:
        type: string
        description: http method
        default: GET
      endpoint:
        type: string
        description: endpoint of user's API
      header:
        type: object
        properties: {}
      body:
        type: object
        properties: {}
      dataField:
        type: string
      time:
        type: string
        description: >-
          period time to collect data in ms unit eg. 3000 means collect data
          every 5 minutes
        default: 3000
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
